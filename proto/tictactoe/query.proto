syntax = "proto3";
package paymog.tictactoe.tictactoe;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "tictactoe/params.proto";
// this line is used by starport scaffolding # 1
import "tictactoe/game.proto";


option go_package = "github.com/paymog/tictactoe/x/tictactoe/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/paymog/tictactoe/tictactoe/params";
  }
  // Queries a list of OpenGames items.
	rpc OpenGames(QueryOpenGamesRequest) returns (QueryOpenGamesResponse) {
		option (google.api.http).get = "/paymog/tictactoe/tictactoe/open_games";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryOpenGamesRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;

}

message QueryOpenGamesResponse {
  repeated Game games = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;

}

// this line is used by starport scaffolding # 3
